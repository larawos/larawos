# 简介

欢迎使用 {{config('app.name')}} API 文档参考

## 接口支持

- 所有模块获取数据集合时，可以自由设置查看数目、页码、每页数目、排序规则，可精确搜索任意字段，可全文检索，可查看已删除数据。默认情况下：返回第一页，每页返回50条，按权重进行综合排序，只返回未删除数据。
- 创建更新接口支持自动单／多图片／视频上传更新，支持秒传功能；创建或更新成功后会返回相应数据。
- 所有接口均符合 Restful Api 设计风格。
- 所有响应给用户的数据友好化。

## 自由获取数据集合

目前支持该功能的接口，有且只有获取分页数据、获取数据集合和搜索数据。

- 增加请求参数 `"page" : 3 // 页码值` 可查看其他分页数据，增加请求参数 `"pre_page" : 20 // 每页准备数据` 可重置本页列表数据量。
- 增加请求参数 `"limit" : 3 // 数目限制` 可重置集合数据量，只适用于获取集合数据。
- 增加请求参数 `"deleted" : 1 // 获取已删除数据` 可查看已删除数据。（类似回收站，前台一般不开放永久删除）
- 增加请求参数 `"order_by" : ['foo', 'asc|desc'] // 根据foo字段顺序或者倒序` 可对分页数据，集合数据排序。
- 增加请求参数 `"search" : ['foo' => 'bar', 'etc' => '...'] // 精确搜索字段字段foo为bar且etc为...的数据` 可精确搜索分页或集合数据。
- 增加请求参数 `"full_search" : 'foo' // 全文搜索带有foo的数据` 可全文搜索分页或集合数据。

## 自动单／多图片／视频上传更新，秒传图片／视频

图片

- 上传图片增加请求参数 `"foo__images" : [ \\ 上传的图片 ]`，如上传自己的一张头像和几张相册：`"avatar__images" : [ \\ 上传的图片 ], "photo__images" : [ \\ 上传的图片 ]`（PS:如果该字段服务器只允许存一张图片而你又上传多张的情况下只会取头一张；所有模块都允许你无限制上传多图`"image_images" : [ \\ 上传的图片 ]`）
- 更新图片只需要增加未被删除的图片id和新上传的图片，如`"photo__images" : [ \\ 上传的图片 ], "photo__images_id" : [ \\ 未被删除的服务器下发图片的id ]`
- 暂时未提供删除功能，多张图片里的删除功能请采用更新图片，新上传的图片为空数组，如果图片全被删除，则id为空数组，如`"photo__images" : [], "photo__images_id" : [] \\ 删除所有图片`
- 秒传图片请获取图片的md5值并不要传图片（否则秒传功能失效），请求参数`"foo__images_md5" : [ \\ 上传图片的md5值 ]`，服务器会返回302响应、重定向地址、已存在的图片id和md5值，如：。

视频

- 上传视频增加请求参数 `"foo__videos" : [ \\ 上传的视频 ]`，如上传自己的一部自拍视频和几部公司视频：`"own__videos" : [ \\ 上传的视频 ], "company__videos" : [ \\ 上传的视频 ]`（PS:如果该字段服务器只允许存一张视频而你又上传多张的情况下只会取头一张；所有模块都允许你无限制上传多图`"video_videos" : [ \\ 上传的视频 ]`）
- 更新视频只需要增加未被删除的视频id和新上传的视频，如`"company__videos" : [ \\ 上传的视频 ], "company__videos_id" : [ \\ 未被删除的服务器下发视频的id ]`
- 暂时未提供删除功能，多张视频里的删除功能请采用更新视频，新上传的视频为空数组，如果视频全被删除，则id为空数组，如`"company__videos" : [], "company__videos_id" : [] \\ 删除所有视频`
- 秒传视频请获取视频的md5值并不要传视频（否则秒传功能失效），请求参数`"foo__videos_md5" : [ \\ 上传视频的md5值 ]`，服务器会返回302响应、重定向地址、已存在的视频id和md5值，如：。

## Restful Api 风格设计

除部分特殊情况除外，服务器完全遵守 Restful Api 风格设计，强烈建议客户端页遵守该规则，这样，服务器才能提供更好的服务。

## 友好化响应

所有需要由服务器响应给用户看的信息都已友好化，响应给客户端的信息遵守http协议。并且，目前已有的协议如下：

- `200` 请求成功
- `302` 需要根据location重定向
- `401` 认证失败，token已失效或账号已不存在
- `403` 请求被拒绝，请再试一次
- `404` 请求地址或数据已经不存在
- `405` 请求方法错误
- `422` 请求参数验证不通过
- `500` 服务器崩溃，开发环境会返回错误描述、文件及行号

## 辅助工具

- 二维码图片获取：`GET` : `{{route('frontend.qrcode.index', ['body' => 'add-string-or-array-content'])}}`
